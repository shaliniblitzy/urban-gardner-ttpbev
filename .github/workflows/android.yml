name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  GRADLE_VERSION: '8.0'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run ktlint
        run: ./gradlew ktlintCheck

      - name: Run unit tests
        run: ./gradlew test

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Build release APK
        if: github.ref == 'refs/heads/main'
        run: ./gradlew assembleRelease

      - name: Upload debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 14

      - name: Upload release APK
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 14

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            app/build/test-results
            app/build/reports
          retention-days: 14

      - name: Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v3
        with:
          files: app/build/reports/coverage/test/debug/report.xml
          fail_ci_if_error: true

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload build report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build-reports.zip
          retention-days: 30

  deploy:
    name: Deploy to Play Store
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download release APK
        uses: actions/download-artifact@v3
        with:
          name: app-release

      - name: Upload to Play Store
        if: github.ref == 'refs/heads/main'
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_CONFIG }}
          packageName: com.gardenplanner
          releaseFiles: app-release.apk
          track: internal
          status: completed
          whatsNewDirectory: whatsnew